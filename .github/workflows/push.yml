name: Build develop and release branches

on: 
  push:
    branches:
      # Push events on develop branch
      - develop
      # Push events on release and feature branches
      - 'release_v*'
      - 'release/release_v*'
      - 'feature/**'
      - 'feature*'
    tags:
      - LIB_*    # Push events matching refs/heads/LIB_* tags
  create:
#  repository_dispatch:
env:
  DISPLAY_CONTEXT: ${{ secrets.DISPLAY_CONTEXT }} # To display github context for debugging

jobs:

  linux-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      PHASE_ID: x
#    outputs:
#      BRANCH_OR_TAG: ${{ steps.branchname.outputs.branch_or_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get branch or tag name from git reference
        id: branchname
        run: |
          BRANCH_OR_TAG=`basename ${{ github.ref }}`
          echo "BRANCH_OR_TAG=${BRANCH_OR_TAG}" >> $GITHUB_ENV
#          echo "::set-output name=branch_or_tag::${BRANCH_OR_TAG}"

      - name: Setup build environment for release branches
        if: contains(github.ref,'refs/heads/release')
        run: |
          echo "PHASE ID: ${PHASE_ID}"
          echo "BUILD NUMBER: ${BUILD_NUMBER}"
          echo "Setting PHASE ID to b"
          echo "PHASE_ID=b" >> $GITHUB_ENV

      - name: Setup build environment for feature branches
        if: contains(github.ref,'refs/heads/feature')
        run: |
          echo "PHASE ID: ${PHASE_ID}"
          echo "BUILD NUMBER: ${BUILD_NUMBER}"
          echo "Setting PHASE ID to f"
          echo "PHASE_ID=f" >> $GITHUB_ENV

      - name: Setup build environment for release tags
        if: contains(github.ref,'refs/tags/LIB')
        run: |
          echo "PHASE ID: ${PHASE_ID}"
          echo "BUILD NUMBER: ${BUILD_NUMBER}"
          echo "Setting PHASE ID to blank"
          echo "PHASE_ID=" >> $GITHUB_ENV

      - name: Build the application
        working-directory: build
        run: |
          echo "Repo Owner:" ${{ github.repository_owner }}
          echo "Run ID:" ${{ github.run_id }}

          export VER_NUM=`cat version.txt` 
          echo "${VER_NUM}${{ env.PHASE_ID }}-${BUILD_NUMBER}" > version_num.txt
          PHASE_ID=${{ env.PHASE_ID }}
          echo "PHASE ID: ${PHASE_ID}"
          cat version_num.txt
          bash bbuild.sh .. 

      - name: Upload version.txt artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: version-${{ env.BRANCH_OR_TAG }}-txt
          path: |
            build/version.txt

      - name: Upload version_num.txt artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: version-num-${{ env.BRANCH_OR_TAG }}-txt
          path: |
            build/version_num.txt
 
      - name: Dump context
        if: ${{ env.DISPLAY_CONTEXT == 'true' }}
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          JOB_CONTEXT: ${{ toJSON(job) }}
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: |
          echo "GITHUB CONTEXT:"
          echo
          echo "$GITHUB_CONTEXT"
          echo
          echo "JOB CONTEXT:"
          echo
          echo "$JOB_CONTEXT"
          echo
          echo "STEPS CONTEXT:"
          echo
          echo "$STEPS_CONTEXT"

  # Trigger the downstream project(s)/repos

  linux-trigger:
    needs: linux-build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger - steves-test-repo2 event
        run: |
          curl -X POST https://api.github.com/repos/SKuhlmanns/steves-test-repo2/actions/workflows/push.yml/dispatches \
          -H 'Accept: application/vnd.github.v3+json' \
          -u ${{ secrets.KUHLMANNS_CURL_TOKEN }} \
          -d '{"ref":"${{ github.ref }}"}'
#          curl -X POST https://api.github.com/repos/SKuhlmanns/steves-test-repo2/dispatches \
#          -H 'Accept: application/vnd.github.v3+json' \
#          -u ${{ secrets.KUHLMANNS_CURL_TOKEN }} \
#          -d '{"event_type": "trigger", 
#                "client_payload": { 
#                  "ref": "${{ github.ref }}", 
#                  "LIB_BRANCH_OR_TAG": "'"${{needs.linux-build.outputs.BRANCH_OR_TAG}}"'" 
#                }
#              }'

      - name: Dump context
        if: ${{ env.DISPLAY_CONTEXT == 'true' }}
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          JOB_CONTEXT: ${{ toJSON(job) }}
          STEPS_CONTEXT: ${{ toJSON(steps) }}
#          RUNNER_CONTEXT: ${{ toJSON(runner) }}
#          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
#          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: |
          echo "GITHUB CONTEXT:"
          echo
          echo "$GITHUB_CONTEXT"
          echo
          echo "JOB CONTEXT:"
          echo
          echo "$JOB_CONTEXT"
          echo
          echo "STEPS CONTEXT:"
          echo
          echo "$STEPS_CONTEXT"
#         echo
#         echo "RUNNER CONTEXT:"
#         echo
#         echo "$RUNNER_CONTEXT"
#         echo
#         echo "STRATEGY CONTEXT:"
#         echo
#         echo "$STRATEGY_CONTEXT"
#         echo
#         echo "MATRIX CONTEXT:"
#         echo
#         echo "$MATRIX_CONTEXT"
